1.  Is JAVA a Pass by Value or a Pass by Reference programming language?
Java is a pass by value programming language.


2. After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two objects still remain?
Due to Java's pass-by-value nature, when the swap() function is called, the original reference values are passed, and the formal references within the function point to the same values. Consequently, the swap() function exchanges the targets of the formal references, rather than the original references themselves. In other words, the original references still point to the same objects as they did before calling swap(), indicating that the titles remain unchanged.


3. After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is the title of the JungleDVD changed?
Given that Java follows pass-by-value semantics, the value of the original reference is passed to the changeTitle() function and then assigned to formal references. Subsequently, the changeTitle() function applies a method on the object itself, leading to a modification of its title. Additionally, it is worth noting that the formal reference is updated to point to a new object with the old title. However, it is important to emphasize that the actual object remains unchanged. The original reference still points to that same object, but its title has been altered. Consequently, when retrieving the title from the jungleDVD object, the updated title will be observed.
4. Write a toString() method for the DigitalVideoDisc class. What should be the return type of this method? 
The return type of this method should be String.